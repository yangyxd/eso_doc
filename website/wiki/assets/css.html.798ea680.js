import{_ as o}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as c,c as r,a as t,b as d,d as l,f as n,e as a,r as i}from"./app.918ef0ee.js";const p={},u=t("p",null,"在 CSS 中，选择器是选取需设置样式的元素的模式。",-1),s=t("p",null,"请使用我们的 CSS 选择器测试工具，它可为您演示不同的选择器。",-1),g={href:"https://www.w3school.com.cn/cssref/css_selectors.asp",target:"_blank",rel:"noopener noreferrer"},h=a('<h2 id="css-选择器" tabindex="-1"><a class="header-anchor" href="#css-选择器" aria-hidden="true">#</a> CSS 选择器</h2><div style="font-size:14px;"><table><thead><tr><th>选择器</th><th>例子</th><th>例子描述</th></tr></thead><tbody><tr><td><code>.class</code></td><td>.intro</td><td>选择 class=&quot;intro&quot; 的所有元素。</td></tr><tr><td><code>.class1.class2</code></td><td>.name1.name2</td><td>选择 class 属性中同时有 name1 和 name2 的所有元素。</td></tr><tr><td><code>.class1 .class2</code></td><td>.name1 .name2</td><td>选择作为类名 name1 元素后代的所有类名 name2 元素。</td></tr><tr><td><code>#id</code></td><td>#firstname</td><td>选择 id=&quot;firstname&quot; 的元素。</td></tr><tr><td><code>*</code></td><td>*</td><td>选择所有元素。</td></tr><tr><td><code>element</code></td><td>p</td><td>选择所有 <code>&lt;p&gt;</code> 元素。</td></tr><tr><td><code>element.class</code></td><td>p.intro</td><td>选择 class=&quot;intro&quot; 的所有 <code>&lt;p&gt;</code> 元素。</td></tr><tr><td><code>element,element</code></td><td>div, p</td><td>选择所有 <code>&lt;div&gt;</code> 元素和所有 <code>&lt;p&gt;</code> 元素。</td></tr><tr><td><code>element element</code></td><td>div p</td><td>选择 <code>&lt;div&gt;</code> 元素内的所有 <code>&lt;p&gt;</code> 元素。</td></tr><tr><td><code>element&gt;element</code></td><td>div &gt; p</td><td>选择父元素是 <code>&lt;div&gt;</code> 的所有 <code>&lt;p&gt;</code> 元素。</td></tr><tr><td><code>element+element</code></td><td>div + p</td><td>选择紧跟 <code>&lt;div&gt;</code> 元素的首个 <code>&lt;p&gt;</code> 元素。</td></tr><tr><td><code>element1~element2</code></td><td>p ~ ul</td><td>选择前面有 <code>&lt;p&gt;</code> 元素的每个 <code>&lt;ul&gt;</code> 元素。</td></tr><tr><td><code>[attribute]</code></td><td>[target]</td><td>选择带有 target 属性的所有元素。</td></tr><tr><td><code>[attribute=value]</code></td><td>[target=_blank]</td><td>选择带有 target=&quot;_blank&quot; 属性的所有元素。</td></tr><tr><td><code>[attribute~=value]</code></td><td>[title~=flower]</td><td>选择 title 属性包含单词 &quot;flower&quot; 的所有元素。</td></tr><tr><td><code>[attribute|=value]</code></td><td>[lang|=en]</td><td>选择 lang 属性值以 &quot;en&quot; 开头的所有元素。</td></tr><tr><td><code>[attribute^=value]</code></td><td>a[href^=&quot;https&quot;]</td><td>选择其 src 属性值以 &quot;https&quot; 开头的每个 <code>&lt;a&gt;</code> 元素。</td></tr><tr><td><code>[attribute$=value]</code></td><td>a[href$=&quot;.pdf&quot;]</td><td>选择其 src 属性以 &quot;.pdf&quot; 结尾的所有 <code>&lt;a&gt;</code> 元素。</td></tr><tr><td><code>[attribute*=value]</code></td><td>a[href*=&quot;w3schools&quot;]</td><td>选择其 href 属性值中包含 &quot;abc&quot; 子串的每个 <code>&lt;a&gt;</code> 元素。</td></tr><tr><td><code>:active</code></td><td>a:active</td><td>选择活动链接。</td></tr><tr><td><code>::after</code></td><td>p::after</td><td>在每个 <code>&lt;p&gt;</code> 的内容之后插入内容。</td></tr><tr><td><code>::before</code></td><td>p::before</td><td>在每个 <code>&lt;p&gt;</code> 的内容之前插入内容。</td></tr><tr><td><code>:checked</code></td><td>input:checked</td><td>选择每个被选中的 <code>&lt;input&gt;</code> 元素。</td></tr><tr><td><code>:default</code></td><td>input:default</td><td>选择默认的 <code>&lt;input&gt;</code> 元素。</td></tr><tr><td><code>:disabled</code></td><td>input:disabled</td><td>选择每个被禁用的 <code>&lt;input&gt;</code> 元素。</td></tr><tr><td><code>:empty</code></td><td>p:empty</td><td>选择没有子元素的每个 <code>&lt;p&gt;</code> 元素（包括文本节点）。</td></tr><tr><td><code>:enabled</code></td><td>input:enabled</td><td>选择每个启用的 <code>&lt;input&gt;</code> 元素。</td></tr><tr><td><code>:first-child</code></td><td>p:first-child</td><td>选择属于父元素的第一个子元素的每个 <code>&lt;p&gt;</code> 元素。</td></tr><tr><td><code>::first-letter</code></td><td>p::first-letter</td><td>选择每个 <code>&lt;p&gt;</code> 元素的首字母。</td></tr><tr><td><code>::first-line</code></td><td>p::first-line</td><td>选择每个 <code>&lt;p&gt;</code> 元素的首行。</td></tr><tr><td><code>:first-of-type</code></td><td>p:first-of-type</td><td>选择属于其父元素的首个 <code>&lt;p&gt;</code> 元素的每个 <code>&lt;p&gt;</code> 元素。</td></tr><tr><td><code>:focus</code></td><td>input:focus</td><td>选择获得焦点的 input 元素。</td></tr><tr><td><code>:fullscreen</code></td><td>:fullscreen</td><td>选择处于全屏模式的元素。</td></tr><tr><td><code>:hover</code></td><td>a:hover</td><td>选择鼠标指针位于其上的链接。</td></tr><tr><td><code>:in-range</code></td><td>input:in-range</td><td>选择其值在指定范围内的 input 元素。</td></tr><tr><td><code>:indeterminate</code></td><td>input:indeterminate</td><td>选择处于不确定状态的 input 元素。</td></tr><tr><td><code>:invalid</code></td><td>input:invalid</td><td>选择具有无效值的所有 input 元素。</td></tr><tr><td><code>:lang(language)</code></td><td>p:lang(it)</td><td>选择 lang 属性等于 &quot;it&quot;（意大利）的每个 <code>&lt;p&gt;</code> 元素。</td></tr><tr><td><code>:last-child</code></td><td>p:last-child</td><td>选择属于其父元素最后一个子元素每个 <code>&lt;p&gt;</code> 元素。</td></tr><tr><td><code>:last-of-type</code></td><td>p:last-of-type</td><td>选择属于其父元素的最后 <code>&lt;p&gt;</code> 元素的每个 <code>&lt;p&gt;</code> 元素。</td></tr><tr><td><code>:link</code></td><td>a:link</td><td>选择所有未访问过的链接。</td></tr><tr><td><code>:not(selector)</code></td><td>:not(p)</td><td>选择非 <code>&lt;p&gt;</code> 元素的每个元素。</td></tr><tr><td><code>:nth-child(n)</code></td><td>p:nth-child(2)</td><td>选择属于其父元素的第二个子元素的每个 <code>&lt;p&gt;</code> 元素。</td></tr><tr><td><code>:nth-last-child(n)</code></td><td>p:nth-last-child(2)</td><td>同上，从最后一个子元素开始计数。</td></tr><tr><td><code>:nth-of-type(n)</code></td><td>p:nth-of-type(2)</td><td>选择属于其父元素第二个 <code>&lt;p&gt;</code> 元素的每个 <code>&lt;p&gt;</code> 元素。</td></tr><tr><td><code>:nth-last-of-type(n)</code></td><td>p:nth-last-of-type(2)</td><td>同上，但是从最后一个子元素开始计数。</td></tr><tr><td><code>:only-of-type</code></td><td>p:only-of-type</td><td>选择属于其父元素唯一的 <code>&lt;p&gt;</code> 元素的每个 <code>&lt;p&gt;</code> 元素。</td></tr><tr><td><code>:only-child</code></td><td>p:only-child</td><td>选择属于其父元素的唯一子元素的每个 <code>&lt;p&gt;</code> 元素。</td></tr><tr><td><code>:optional</code></td><td>input:optional</td><td>选择不带 &quot;required&quot; 属性的 input 元素。</td></tr><tr><td><code>:out-of-range</code></td><td>input:out-of-range</td><td>选择值超出指定范围的 input 元素。</td></tr><tr><td><code>::placeholder</code></td><td>input::placeholder</td><td>选择已规定 &quot;placeholder&quot; 属性的 input 元素。</td></tr><tr><td><code>:read-only</code></td><td>input:read-only</td><td>选择已规定 &quot;readonly&quot; 属性的 input 元素。</td></tr><tr><td><code>:read-write</code></td><td>input:read-write</td><td>选择未规定 &quot;readonly&quot; 属性的 input 元素。</td></tr><tr><td><code>:required</code></td><td>input:required</td><td>选择已规定 &quot;required&quot; 属性的 input 元素。</td></tr><tr><td><code>:root</code></td><td>:root</td><td>选择文档的根元素。</td></tr><tr><td><code>::selection</code></td><td>::selection</td><td>选择用户已选取的元素部分。</td></tr><tr><td><code>:target</code></td><td>#news:target</td><td>选择当前活动的 #news 元素。</td></tr><tr><td><code>:valid</code></td><td>input:valid</td><td>选择带有有效值的所有 input 元素。</td></tr><tr><td><code>:visited</code></td><td>a:visited</td><td>选择所有已访问的链接。</td></tr></tbody></table></div>',2);function f(m,q){const e=i("ExternalLinkIcon");return c(),r("div",null,[u,s,t("p",null,[d("转自 "),t("a",g,[d("CSS 选择器参考手册"),l(e)])]),n(" more "),h])}const b=o(p,[["render",f],["__file","css.html.vue"]]);export{b as default};
