import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as t,c as o,a as n,b as a,d as p,f as d,e as i,r}from"./app.a4ff1c07.js";const c={},l=n("code",null,"GET",-1),u=n("code",null,"POST",-1),h=n("code",null,"headers",-1),v=n("code",null,"body",-1),k={href:"https://blog.csdn.net/qq_40121580/article/details/107349943",target:"_blank",rel:"noopener noreferrer"},m=n("p",null,"请求规则主要用于搜索、发现、章节、正文的请求地址。",-1),q=i(`<h2 id="http-请求简介" tabindex="-1"><a class="header-anchor" href="#http-请求简介" aria-hidden="true">#</a> HTTP 请求简介</h2><p>下面是一个 POST 请求的示例：</p><div class="language-http line-numbers-mode" data-ext="http"><pre class="language-http"><code><span class="token request-line"><span class="token method property">POST</span> <span class="token request-target url">/search/error.html</span> <span class="token http-version property">HTTP/1.1</span></span>
<span class="token header"><span class="token header-name keyword">Accept</span><span class="token punctuation">:</span> <span class="token header-value">*/*</span></span>
<span class="token header"><span class="token header-name keyword">User-Agent</span><span class="token punctuation">:</span> <span class="token header-value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36</span></span>
<span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">text/html; charset=UTF-8</span></span>
<span class="token header"><span class="token header-name keyword">Accept-Encoding</span><span class="token punctuation">:</span> <span class="token header-value">gzip, deflate</span></span>
<span class="token header"><span class="token header-name keyword">Content-Length</span><span class="token punctuation">:</span> <span class="token header-value">19</span></span>
<span class="token header"><span class="token header-name keyword">Accept-Language</span><span class="token punctuation">:</span> <span class="token header-value">zh-cn,zh;q=0.8,en-us;q=0.5,en;q=0.3</span></span>
<span class="token header"><span class="token header-name keyword">Connection</span><span class="token punctuation">:</span> <span class="token header-value">Keep-Alive</span></span>

name=tom&amp;pwd=123456
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="普通的-get-请求" tabindex="-1"><a class="header-anchor" href="#普通的-get-请求" aria-hidden="true">#</a> 普通的 GET 请求</h2><p>直接设置 URL 地址即可。如：</p><div class="language-http line-numbers-mode" data-ext="http"><pre class="language-http"><code><span class="token header"><span class="token header-name keyword">https</span><span class="token punctuation">:</span><span class="token header-value">//www.baidu.com/</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="带变量关键词的-get-请求" tabindex="-1"><a class="header-anchor" href="#带变量关键词的-get-请求" aria-hidden="true">#</a> 带变量关键词的 GET 请求</h2><h3 id="基础变量" tabindex="-1"><a class="header-anchor" href="#基础变量" aria-hidden="true">#</a> 基础变量</h3><div style="font-size:14px;"><table><thead><tr><th>变量名</th><th>可用规则</th><th>描述</th></tr></thead><tbody><tr><td>host</td><td>全部规则</td><td>域名 URL</td></tr><tr><td>keyword</td><td>搜索地址规则</td><td>搜索关键字</td></tr><tr><td>page</td><td>地址规则</td><td>地址规则当前页码</td></tr><tr><td>pageSize</td><td>地址规则</td><td>地址规则当前分页大小</td></tr><tr><td>cookie</td><td>全部规则</td><td>请求规则 cookie 数据</td></tr><tr><td>kind</td><td>发现地址规则</td><td><a href="#%E7%AD%9B%E9%80%89%E6%A8%A1%E5%BC%8F"><strong>筛选模式</strong></a> 可用，栏目类别值</td></tr></tbody></table></div><p>在请求的 URL 中可使用 <code>$变量名</code> 的方式使用以上变量。在运行时，会用变量的值替换变量关键词。</p><p><strong>示例：</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>https://www.baidu.com/s?ie=UTF-8&amp;wd=$keyword&amp;page=$page
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="扩展变量" tabindex="-1"><a class="header-anchor" href="#扩展变量" aria-hidden="true">#</a> 扩展变量</h3><div style="font-size:14px;"><table><thead><tr><th>变量名</th><th>可用规则</th><th>描述</th></tr></thead><tbody><tr><td>verificationCode(&#39;url&#39;)</td><td>搜索地址规则</td><td>获取验证码</td></tr></tbody></table></div><h3 id="获取验证码-只支持搜索地址规则" tabindex="-1"><a class="header-anchor" href="#获取验证码-只支持搜索地址规则" aria-hidden="true">#</a> 获取验证码(只支持搜索地址规则)</h3><p>使用 <code>verificationCode(&#39;url&#39;)</code> ，搜索时提供一个输入验证码的弹窗。弹窗中显示验证码图像和输入框。</p><p><strong>示例：</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>https://www.baidu.com/s?ie=UTF-8&amp;wd=$keyword&amp;page=$page&amp;code=$verificationCode(&#39;https://www.baidu.com/img/flexible/logo/pc/result.png&#39;)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="设置编码方式-encoding-的-get-请求" tabindex="-1"><a class="header-anchor" href="#设置编码方式-encoding-的-get-请求" aria-hidden="true">#</a> 设置编码方式 (encoding) 的 GET 请求</h2><p>以爱奇文学为例。</p><p>他的搜索是一个带gbk编码的GET请求。搜索汉字 &quot;玄幻&quot;，链接为：</p><div class="language-http line-numbers-mode" data-ext="http"><pre class="language-http"><code><span class="token header"><span class="token header-name keyword">http</span><span class="token punctuation">:</span><span class="token header-value">//www.iqiwx.com/modules/article/search.php?searchkey=%D0%FE%BB%C3&amp;searchtype=articlename&amp;page=1</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>可知玄幻的编码是 <mark>%D0%FE%BB%C3</mark>，去掉百分号即 <mark>D0FEBBC3</mark>，数字节得1汉字对于2字节，这是GBK编码特征，</p><p>使用 <code>$keyword</code> 替换搜索关键词，使用$page替换页码位置，指定编码 <code>&quot;encoding&quot;:&quot;gbk&quot;</code>，使用JSON写法如下：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://www.iqiwx.com/modules/article/search.php?searchkey=$keyword&amp;searchtype=articlename&amp;page=$page&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;encoding&quot;</span><span class="token operator">:</span> <span class="token string">&quot;gbk&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="自定义-header-的-get-请求" tabindex="-1"><a class="header-anchor" href="#自定义-header-的-get-请求" aria-hidden="true">#</a> 自定义 header 的 GET 请求</h2><p>如果需要携带请求头信息，则加上 <code>headers</code>。有两种方式：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/modules/article/search.php?searchkey=$keyword&amp;searchtype=articlename&amp;page=$page&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;headers&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;Accept-Language&quot;</span><span class="token operator">:</span> <span class="token string">&quot;zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;User-Agent&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36 Edg/84.0.522.40&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>图像规则，如封面图，可在得到图像的 <code>url</code> 后使用下面的方式指定获取图像的http 请求<code>header</code>:</p><p>格式为： <code>url@headers{&quot;name&quot;:&quot;value&quot;,...}</code></p></div><p>示例：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>http://www.iqiwx.com/logo.jpg@headers{&quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36 Edg/84.0.522.40&quot;}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="post-请求" tabindex="-1"><a class="header-anchor" href="#post-请求" aria-hidden="true">#</a> POST 请求</h2><p>因为 POST 请求不像 GET 请求那样，可以只有一个 URL 地址，所以都会是以 JSON 的写法来。</p><p>GET 请求 JSON 写法的内容同样适用于 POST 请求。其实只是 <code>method</code> 不一样。</p><p>示例1：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://www.iqiwx.com/modules/article/search.php&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;method&quot;</span><span class="token operator">:</span> <span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;body&quot;</span><span class="token operator">:</span> <span class="token string">&quot;searchkey=$keyword&amp;searchtype=articlename&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;headers&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;Content-Type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;application/x-www-form-urlencoded&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例2：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://www.iqiwx.com/modules/article/search.php&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;method&quot;</span><span class="token operator">:</span> <span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;body&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;searchkey&quot;</span><span class="token operator">:</span> <span class="token string">&quot;$keyword&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;searchtype&quot;</span><span class="token operator">:</span> <span class="token string">&quot;articlename&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例3： POST包含表单和JSON</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/modules/article/search.php&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;method&quot;</span><span class="token operator">:</span> <span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;body&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{\\&quot;searchkey\\&quot;: \\&quot;$keyword\\&quot;,\\&quot;searchtype\\&quot;: \\&quot;articlename\\&quot;}&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;headers&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;Content-Type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;application/json&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="配合-js-规则" tabindex="-1"><a class="header-anchor" href="#配合-js-规则" aria-hidden="true">#</a> 配合 <code>@js</code> 规则</h2><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>@js<span class="token operator">:</span>
(<span class="token punctuation">{</span>
    <span class="token property">&quot;url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/modules/article/search.php&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;method&quot;</span><span class="token operator">:</span> <span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;body&quot;</span><span class="token operator">:</span> JSON.stringify(<span class="token punctuation">{</span>
        <span class="token property">&quot;searchkey&quot;</span><span class="token operator">:</span> keyword<span class="token punctuation">,</span>
        <span class="token property">&quot;searchtype&quot;</span><span class="token operator">:</span> <span class="token string">&quot;articlename&quot;</span>
    <span class="token punctuation">}</span>)<span class="token punctuation">,</span>
    <span class="token property">&quot;headers&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;Content-Type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;application/json&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>模板只是参考，要根据实际情况按需使用，所有写法都有js写法，不妨试试。</p></div><h2 id="高级-http-规则" tabindex="-1"><a class="header-anchor" href="#高级-http-规则" aria-hidden="true">#</a> 高级 <code>@http:</code> 规则</h2><p>可以在多个规则之间，使用 <code>@http:</code> 请求 HTTP 资源。</p><p><strong>例子：</strong></p><ol><li>将上一个规则返回的返回内容作为请求 <code>url</code> ，发起请求，并将响应结果返回。</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>// 获取百度首页的html内容
@js:&#39;http://www.baidu.com/&#39;;@http:1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>检测上一个规则返回的结果是否符合条件（正则匹配），如果不符合才发起请求，否则直接返回上一次的结果</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>// 判断上一次的结果中是否包含 &quot;.m3u8&quot; ， 如果没有才请求
// 格式： @http:1@@regexp
@js:lastResult;@http:1@@.m3u8
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p><code>@http:</code> 规则有结果缓存，在一些情况下能提升效率。</p></div><h2 id="其它" tabindex="-1"><a class="header-anchor" href="#其它" aria-hidden="true">#</a> 其它</h2><h3 id="跳过请求" tabindex="-1"><a class="header-anchor" href="#跳过请求" aria-hidden="true">#</a> 跳过请求</h3><p>有时候，我们并不需要发起 HTTP 请求，这个时候，可以在请求规则中写上 <code>null</code> 。此时，会将地址规则中的 <code>result</code> 作为请求结果向下传递。</p><h3 id="贯穿章节模式" tabindex="-1"><a class="header-anchor" href="#贯穿章节模式" aria-hidden="true">#</a> 贯穿章节模式</h3><p>当章节地址规则 <code>chapterUrl</code> 为空 <code>null</code> ，并且章节列表规则 <code>chapterList</code> 为空时， 自动启用章节贯穿模式。</p><p>有时候，我们搜索或发现列表的数据已经是最终数据，不需要再获取章节数据时，可以使用此模式，简化规则编写。</p><p>此模式下会自动添加一个 <code>阅读</code> 或 <code>查看</code> 的章节，并以章节地址规则的 <code>result</code> 作为结果向下传递。</p>`,58);function b(g,y){const s=r("ExternalLinkIcon");return t(),o("div",null,[n("p",null,[a("亦搜使用 HTTP 协议收发请求。HTTP请求包括请求方法("),l,a("、"),u,a(" 等)，请求头("),h,a(")，请求体("),v,a(")。有兴趣可查看"),n("a",k,[a("《http请求消息数据格式详解》"),p(s)]),a("。")]),m,d(" more "),q])}const T=e(c,[["render",b],["__file","001.html.vue"]]);export{T as default};
