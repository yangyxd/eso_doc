import{_ as i}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as l,c as o,f as h,a as e,b as a,d,w as c,e as s,r}from"./app.918ef0ee.js";const u={},p=e("p",null,"本文主要介绍基本的取数据元素的方法。",-1),m=s(`<h2 id="取-html-元素" tabindex="-1"><a class="header-anchor" href="#取-html-元素" aria-hidden="true">#</a> 取 html 元素</h2><p>可以根据元素的 <code>class</code> 或 <code>id</code> 使用 <code>css选择器</code> 获取，也可以通过 <code>XPath</code> 路径获取元素。若使用了 <code>js</code>，最后应输出 <code>Array</code> 对象。</p><h3 id="根据元素的-class-或-id-取-等同于-css" tabindex="-1"><a class="header-anchor" href="#根据元素的-class-或-id-取-等同于-css" aria-hidden="true">#</a> 根据元素的 <code>class</code> 或 <code>id</code> 取，等同于 <code>@css:</code></h3><p>需以 <code>.</code> 或 <code>#</code> 开头，紧跟 <code>css</code> 选择器代码。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>.class
#id
.class1.class2
.class1 .class2
.class a@text
.class a@textNodes
.class@html
.class@innerHtml
.class@outerHtml
#id a@href
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),v=s(`<h3 id="根据元素路径取-等同于-xpath" tabindex="-1"><a class="header-anchor" href="#根据元素路径取-等同于-xpath" aria-hidden="true">#</a> 根据元素路径取，等同于 <code>@xpath:</code></h3><p>需以 <code>/</code> 开头，紧跟元素 <code>xpath</code> 路径表达式。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>//*[@id=&quot;resultDiv&quot;]/tr
//*[@class=&quot;title&quot;]/text()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>取元素规则后面紧跟<code>##</code> <code>{查找内容}</code> <code>##</code> <code>{替换为}</code> ，可实现对元素内容进行替换的功能。此方式同样适用于 <code>@css</code>, <code>@json</code> 规则。</p><p><strong>规则：</strong><code>rule##replaceRegex##replacement##replaceFirst</code></p><p><strong>示例：</strong> 取出类名为<code>title</code>的元素的<code>href</code>属性内容，将将<code>book</code>替换为<code>chapter</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>//*[@class=&quot;title&quot;]/@href##book##chapter
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="使用-css-css选择器" tabindex="-1"><a class="header-anchor" href="#使用-css-css选择器" aria-hidden="true">#</a> 使用 <code>@css:[CSS选择器]</code></h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>@css:.class
@css:#id a@href
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用-xpath-路径表达式" tabindex="-1"><a class="header-anchor" href="#使用-xpath-路径表达式" aria-hidden="true">#</a> 使用 <code>@xpath:[路径表达式]</code></h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>@xpath://a
@xpath:/a/@href
@xpath: /a/text()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>参考：</p>`,12),x={href:"https://www.w3school.com.cn/xpath/xpath_syntax.asp",target:"_blank",rel:"noopener noreferrer"},g={href:"https://www.w3.org/TR/1999/REC-xpath-19991116/",target:"_blank",rel:"noopener noreferrer"},b={href:"https://github.com/codingfd/xpath/blob/master/README.md",target:"_blank",rel:"noopener noreferrer"},_=s(`<h2 id="取-json-数据" tabindex="-1"><a class="header-anchor" href="#取-json-数据" aria-hidden="true">#</a> 取 Json 数据</h2><p>可以直接使用 $ 开头或 <code>@json:</code> 来获取 <code>json</code> 内容。</p><h3 id="使用-开头-省略-json" tabindex="-1"><a class="header-anchor" href="#使用-开头-省略-json" aria-hidden="true">#</a> 使用 $ 开头，省略 <code>@json:</code></h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$..item.*
$.data.content[*]
$.name
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用-json" tabindex="-1"><a class="header-anchor" href="#使用-json" aria-hidden="true">#</a> 使用 <code>@json:</code></h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>@json:$.books.*
@json:$.name
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>参考：</p>`,7),f={href:"https://www.runoob.com/json/json-syntax.html",target:"_blank",rel:"noopener noreferrer"},j={href:"https://www.apifox.cn/help/reference/json-path/",target:"_blank",rel:"noopener noreferrer"},w={href:"https://goessner.net/articles/JsonPath/",target:"_blank",rel:"noopener noreferrer"},k=s(`<h2 id="正则表达式取数据" tabindex="-1"><a class="header-anchor" href="#正则表达式取数据" aria-hidden="true">#</a> 正则表达式取数据</h2><p>可以使用 <code>:</code> 开头或 <code>@regexp:</code> 或 <code>@regexp:</code> 来使用正则功能取数据。</p><h3 id="使用-正式表达式-或-regexp-或-regex" tabindex="-1"><a class="header-anchor" href="#使用-正式表达式-或-regexp-或-regex" aria-hidden="true">#</a> 使用 <code>:[正式表达式]</code> 或 <code>@regexp:</code> 或 <code>@regex:</code></h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>:h3[\\s\\S]*&amp;#63;h3
@regex:h3[\\s\\S]*&amp;#63;h3
@regexp:h3[\\s\\S]*&amp;#63;h3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),N=s(`<h3 id="使用自定义符号-and" tabindex="-1"><a class="header-anchor" href="#使用自定义符号-and" aria-hidden="true">#</a> 使用自定义符号 <code>AND</code></h3><p>添加自定义符号 <code>AND</code>：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>@regex:&lt;div&gt;[\\w\\W]*&lt;/div&gt;AND&lt;li&gt;.*&amp;#63;&lt;/li&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>会先匹配前面的内容，然后在前一个 <code>AND</code> 的结果中匹配后面的内容。</p><h3 id="使用正向-反向肯定-否定预查" tabindex="-1"><a class="header-anchor" href="#使用正向-反向肯定-否定预查" aria-hidden="true">#</a> 使用正向/反向肯定/否定预查</h3><p>可以使用正向/反向肯定/否定预查 (?&lt;=pattern) 或 (?pattern) 或 (?！pattern) 或 (?&lt;！pattern) 来定位内容。</p><p>例子：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>@regex:r&#39;(&amp;#63;&lt;=href=&quot;)[^&quot;]*&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="匹配-match-规则" tabindex="-1"><a class="header-anchor" href="#匹配-match-规则" aria-hidden="true">#</a> 匹配 <code>@match:</code> 规则</h2><p>可以使用 <code>@match:</code> 规则来匹配 字符串 <code>String</code>、元素<code>Element</code>、<code>Map</code> 或 <code>List</code> 内容，并得到由 <code></code> （两个空格）连接的字符串。</p><p>格式如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>@match:[regex]
@match:[regex]@@[group]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>参数 group 默认为 0。</p><p>例子：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>@match:http.*&amp;#63;jpg
@match:url\\(&quot;&amp;#63;(.*&amp;#63;jpg)@@1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="替换-replace-规则" tabindex="-1"><a class="header-anchor" href="#替换-replace-规则" aria-hidden="true">#</a> 替换 <code>@replace:</code> 规则</h2><p>可以使用 <code>@replace:</code> 规则来正则匹配内容并进行替换。</p><p>格式如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>@replace:[regexp/substr]
@replace:[regexp/substr]@@[replacement]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>如果不指定 <code>replacement</code> 参数，会将匹配到的内容删除。</p></div><p>例子：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>@replace:&lt;/&amp;#63;em&gt;
@replace:(&amp;#63;=\\d+)@@播放量
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,22);function S(q,E){const t=r("RouterLink"),n=r("ExternalLinkIcon");return l(),o("div",null,[p,h(" more "),m,e("p",null,[a("参考： "),d(t,{to:"/reference/css.html"},{default:c(()=>[a("《CSS选择器参考手册》")]),_:1})]),v,e("ul",null,[e("li",null,[e("a",x,[a("《XPath语法》"),d(n)])]),e("li",null,[d(t,{to:"/reference/xpath.html"},{default:c(()=>[a("《XPath语法参考》")]),_:1})]),e("li",null,[e("a",g,[a("标准规范 W3C XPATH 1.0"),d(n)])]),e("li",null,[e("a",b,[a("说明 xpath/README.md"),d(n)])])]),_,e("ul",null,[e("li",null,[e("a",f,[a("《JSON语法》"),d(n)])]),e("li",null,[e("a",j,[a("《JSON Path语法》"),d(n)])]),e("li",null,[e("a",w,[a("《JSONPath 与 XPath 语法参考》"),d(n)])])]),k,e("p",null,[a("参考： "),d(t,{to:"/reference/regex.html"},{default:c(()=>[a("《正则表达式简介》")]),_:1})]),N])}const C=i(u,[["render",S],["__file","000.html.vue"]]);export{C as default};
